@model DataLayer.Core.AspNetStudent

@{
    ViewBag.Title = "Update Student";

}

<meta http-equiv="X-UA-Compatible" content="IE=edge" />

@Styles.Render("~/AdminLTE/plugins/daterangepicker/css-r")
@Styles.Render("~/AdminLTE/plugins/icheck/css-r")
@Styles.Render("~/AdminLTE/plugins/colorpicker/css-r")
@Styles.Render("~/AdminLTE/plugins/timepicker/css-r")
@Styles.Render("~/AdminLTE/plugins/select2/css-r")
@Styles.Render("~/AdminLTE/dist/css-r")
@Styles.Render("~/AdminLTE/dist/css/skins-r")


<link href="@Url.Content("~/Content/themes/base/jquery.ui.core.css")"
      rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/themes/base/jquery.ui.datepicker.css")"
      rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/themes/base/jquery.ui.theme.css")"
      rel="stylesheet" type="text/css" />
<script src='@Url.Content("~/Scripts/jquery-1.12.4.js")' type='text/javascript'></script>
<script src='@Url.Content("~/Scripts/jquery.validate.js")' type='text/javascript'>
</script>
<script src='@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")' type='text/javascript'></script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)


    <div class="row">
        <div class="col-md-15 col-lg-7">
            <div class="box box-primary">
                <div class="box-body">
                    <div class="form-group">
                        <div class="col-sm-20">
                            @Html.LabelFor(model => model.StudentID, htmlAttributes: new { @class = "control-label col-md-2" })
                            @*@Html.EditorFor(model => model.StudentID, new { disabled = "disabled", @readonly = "readonly" })*@

                            @Html.TextBoxFor(model => model.StudentID, new { disabled = "disabled", @readonly = "readonly", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-20">
                            @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                            @*<label for="Firstname" class="control-label">First Name</label>*@
                            @if (Model.Firstname != null)
                            {
                                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { style = "height:28px; border-radius:3px;", @class = "form-control" } })
                            }
                            else
                            {
                                @Html.TextBox(Model.Firstname)
                            }
                            @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-20">
                            @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                            @if (Model.Lastname != null)
                            {
                                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { style = "height:28px; border-radius:3px;", @class = "form-control" } })
                            }
                            else
                            {
                                @Html.TextBox(Model.Lastname)
                            }
                            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-20">
                            @Html.LabelFor(model => model.CellNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            @if (Model.CellNumber != null)
                            {
                                @Html.EditorFor(model => model.CellNumber, new { htmlAttributes = new { style = "height:28px; border-radius:3px;", @class = "form-control" } })

                            }
                            else
                            {
                                @Html.TextBox(Model.CellNumber)
                            }
                            @Html.ValidationMessageFor(model => model.CellNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-20">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            @if (Model.Email != null)
                            {
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { style = "height:28px; border-radius:3px;", @class = "form-control" } })

                            }
                            else
                            {
                                @Html.TextBox(Model.Email)
                            }
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-20">
                            @Html.LabelFor(model => model.University, htmlAttributes: new { @class = "control-label col-md-2" })
                            @if (Model.University != null)
                            {
                                @Html.EditorFor(model => model.University, new { htmlAttributes = new { style = "height:28px; border-radius:3px;", @class = "form-control" } })
                            }
                            else
                            {
                                @Html.TextBox(Model.University)
                            }
                            @Html.ValidationMessageFor(model => model.University, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-20">
                            @Html.LabelFor(model => model.Qualification, htmlAttributes: new { @class = "control-label col-md-2" })
                            @if (Model.Qualification != null)
                            {
                                @Html.EditorFor(model => model.Qualification, new { htmlAttributes = new { style = "height:28px; border-radius:3px;", @class = "form-control" } })
                            }
                            else
                            {
                                @Html.TextBox(Model.Qualification)
                            }
                            @Html.ValidationMessageFor(model => model.Qualification, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-20">
                            <label for="YearofStudy" class="control-label">Year of Study</label>
                            @*@Html.TextBoxFor(m => m.YearofStudy, new { @class = "form-control" })*@
                            @if (Model.YearofStudy != null)
                            {
                                @Html.EditorFor(model => model.YearofStudy, new { style = "height:28px; border-radius:3px;", @class = "form-control" })
                            }
                            else
                            {
                                @Html.TextBox(Model.YearofStudy.ToString())
                            }
                            @Html.ValidationMessageFor(model => model.YearofStudy)
                            <label for="YearofRequest" class="control-label">Year of Request</label>
                            @if (Model.YearofRequest != null)
                            {
                                @Html.EditorFor(model => model.YearofRequest, new { style = "height:28px; border-radius:3px;", @class = "form-control" })
                            }
                            else
                            {
                                @Html.TextBox(Model.YearofRequest.ToString())
                            }
                            @Html.ValidationMessageFor(model => model.YearofRequest)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-20">
                            @Html.LabelFor(model => model.AcademicAverage, htmlAttributes: new { @class = "control-label col-md-2" })
                            @if (Model.AcademicAverage != null)
                            {
                                @Html.EditorFor(model => model.AcademicAverage, new { htmlAttributes = new { style = "height:28px; border-radius:3px;", @class = "form-control" } })
                            }
                            else
                            {
                                @Html.TextBox(Model.AcademicAverage.Value.ToString())
                            }
                            @Html.ValidationMessageFor(model => model.AcademicAverage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-20">
                            @Html.LabelFor(model => model.AmountofFundingNeeded, htmlAttributes: new { @class = "control-label col-md-2" })
                            @if (Model.AmountofFundingNeeded != null)
                            {
                                @Html.EditorFor(model => model.AmountofFundingNeeded, new { htmlAttributes = new { style = "height:28px; border-radius:3px;", @class = "form-control" } })
                            }
                            else
                            {
                                @Html.TextBox(Model.AmountofFundingNeeded.Value.ToString())
                            }
                            @Html.ValidationMessageFor(model => model.AmountofFundingNeeded, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-20">
                            @Html.LabelFor(model => model.WhatTheFundingWillBeUsedFor, htmlAttributes: new { @class = "control-label col-md-2" })
                            @if (Model.WhatTheFundingWillBeUsedFor != null)
                            {
                                @Html.EditorFor(model => model.WhatTheFundingWillBeUsedFor, new { htmlAttributes = new { style = "height:100px; border-radius:3px;", @class = "form-control" } })

                            }
                            else
                            {
                                @Html.TextBox(Model.WhatTheFundingWillBeUsedFor)
                            }
                            @Html.ValidationMessageFor(model => model.WhatTheFundingWillBeUsedFor, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-20">
                            @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
                            @if (Model.Bio != null)
                            {
                                @Html.EditorFor(model => model.Bio, new { htmlAttributes = new { style = "height:100px; border-radius:3px;", @class = "form-control" } })
                            }
                            else
                            {
                                @Html.TextBox(Model.Bio)
                            }
                            @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-20">
                            @Html.LabelFor(model => model.Motivation, htmlAttributes: new { @class = "control-label col-md-2" })
                            @if (Model.Motivation != null)
                            {
                                @Html.EditorFor(model => model.Motivation, new { htmlAttributes = new { style = "height:100px; border-radius:3px;", @class = "form-control" } })
                            }
                            else
                            {
                                @Html.TextBox(Model.Motivation)
                            }
                            @Html.ValidationMessageFor(model => model.Motivation, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.CellNumberConfimed, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CellNumberConfimed, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CellNumberConfimed, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmailConfirmed, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.InsertDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.InsertDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InsertDate, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                    <div class="row">
                        <div class="col-xs-10 col-md-4 col-lg-5">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "ViewAllStudents")
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $(".datepicker").datepicker();
    });
</script>


@section Scripts {
    @Scripts.Render("~/AdminLTE/plugins/select2/js-r")
    @Scripts.Render("~/AdminLTE/plugins/input-mask/js-r")
    @Scripts.Render("~/AdminLTE/plugins/momentjs/js-r")
    @Scripts.Render("~/AdminLTE/plugins/daterangepicker/js-r")
    @Scripts.Render("~/AdminLTE/plugins/colorpicker/js-r")
    @Scripts.Render("~/AdminLTE/plugins/timepicker/js-r")
    @Scripts.Render("~/AdminLTE/plugins/icheck/js-r")
    @Scripts.Render("~/Scripts/Forms/Advanced-r")
    @Scripts.Render("~/AdminLTE/plugins/chartjs/js-r")
    @Scripts.Render("~/AdminLTE/plugins/datatables/js-r")
    @*@Scripts.Render("~/Scripts/Donation/Main-r")*@
}
